
-- CREATE A DEDICATED TABLESPACE FOR THE VAULT SCHEMA

CREATE SMALLFILE TABLESPACE VAULT
DATAFILE
	'D:\Databases\Vault\VAULT1.DBF' SIZE 100M,
	'D:\Databases\Vault\VAULT2.DBF' SIZE 100M
LOGGING
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
SEGMENT SPACE MANAGEMENT AUTO;

-- CREATE ROLES SPECIFIED IN THE PROJECT

CREATE ROLE R_DWELLER NOT IDENTIFIED;
CREATE ROLE R_ENGINEER NOT IDENTIFIED;
CREATE ROLE R_GUARD NOT IDENTIFIED;
CREATE ROLE R_MANAGER NOT IDENTIFIED;
CREATE ROLE R_MEDIC NOT IDENTIFIED;

-- CREATE DATABASE USERS WITH THE SPECIFIED ROLES

CREATE USER "V_OVERSEER" IDENTIFIED BY ovr;
-- USER SQL
ALTER USER "V_OVERSEER"
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "V_OVERSEER" QUOTA UNLIMITED ON "VAULT";
-- SYSTEM PRIVILEGES

GRANT ALL PRIVILEGES TO V_OVERSEER;


-- USER SQL
CREATE USER "DWELLER" IDENTIFIED BY dwlr;

ALTER USER DWELLER
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "DWELLER" QUOTA UNLIMITED ON VAULT;


GRANT CREATE SESSION TO DWELLER;

-- USER SQL
CREATE USER "ENGINEER" IDENTIFIED BY eng;

ALTER USER ENGINEER
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "ENGINEER" QUOTA UNLIMITED ON VAULT;


GRANT CREATE SESSION TO ENGINEER;

-- USER SQL
CREATE USER "GUARD" IDENTIFIED BY grd;

ALTER USER GUARD
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "GUARD" QUOTA UNLIMITED ON VAULT;


GRANT CREATE SESSION TO GUARD;

-- ROLES
ALTER USER "GUARD" DEFAULT ROLE "R_GUARD","R_DWELLER";


-- USER SQL
CREATE USER "MANAGER" IDENTIFIED BY mgr;

ALTER USER "MANAGER"
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "MANAGER" QUOTA UNLIMITED ON "VAULT";


GRANT CREATE SESSION TO MANAGER;

-- USER SQL
CREATE USER "MEDIC" IDENTIFIED BY mdc;

ALTER USER MEDIC
DEFAULT TABLESPACE "VAULT"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "MEDIC" QUOTA UNLIMITED ON "VAULT";

GRANT CREATE SESSION TO MEDIC;


GRANT R_DWELLER TO DWELLER;
GRANT R_MEDIC, R_DWELLER TO MEDIC;
GRANT R_DWELLER, R_MANAGER TO MANAGER;
GRANT R_ENGINEER, R_DWELLER TO ENGINEER;
GRANT R_GUARD, R_DWELLER TO GUARD;
GRANT "R_MEDIC","R_ENGINEER","R_MANAGER","R_GUARD","R_DWELLER" TO V_OVERSEER;

ALTER USER "DWELLER" DEFAULT ROLE "R_DWELLER";
ALTER USER "MEDIC" DEFAULT ROLE "R_MEDIC","R_DWELLER";
ALTER USER "MANAGER" DEFAULT ROLE "R_MANAGER","R_DWELLER";
ALTER USER "ENGINEER" DEFAULT ROLE "R_DWELLER", "R_ENGINEER";
ALTER USER GUARD DEFAULT ROLE R_DWELLER, R_GUARD;
ALTER USER "V_OVERSEER" DEFAULT ROLE "R_MEDIC","R_ENGINEER","R_MANAGER","R_GUARD","R_DWELLER";

--------------------------------------------------------
--  File created - sobota-lipca-02-2022   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence PK_GEN_BEDS
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_BEDS"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_COMP
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_COMP"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_DWLR
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_DWLR"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_EMD
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_EMD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_EXP
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_EXP"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_GTOR
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_GTOR"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_ITEMS
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_ITEMS"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_JOB
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_JOB"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_PUMP
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_PUMP"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_ROOMS
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_ROOMS"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PK_GEN_STOR
--------------------------------------------------------

   CREATE SEQUENCE  "V_OVERSEER"."PK_GEN_STOR"  MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table BEDS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."BEDS" 
   (	"BED_ID" NUMBER, 
	"ROOM_ID" NUMBER, 
	"VER_STATUS" NVARCHAR2(16) DEFAULT 'pending'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."BEDS" TO "R_ENGINEER";
  GRANT DELETE ON "V_OVERSEER"."BEDS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."BEDS" TO "R_MEDIC";
  GRANT INSERT ON "V_OVERSEER"."BEDS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."BEDS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."BEDS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table COMPLAINTS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."COMPLAINTS" 
   (	"COMP_ID" NUMBER, 
	"COMP_AUTHOR" NUMBER, 
	"COMP_SUBJ" NVARCHAR2(32) DEFAULT '>>Not specified<<', 
	"DESCR" NVARCHAR2(256) DEFAULT '>>Empty<<', 
	"VER_STATUS" NVARCHAR2(16) DEFAULT 'pending'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT INSERT ON "V_OVERSEER"."COMPLAINTS" TO "R_DWELLER";
  GRANT INSERT ON "V_OVERSEER"."COMPLAINTS" TO "DWELLER";
  GRANT SELECT ON "V_OVERSEER"."COMPLAINTS" TO "R_DWELLER";
  GRANT DELETE ON "V_OVERSEER"."COMPLAINTS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."COMPLAINTS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."COMPLAINTS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table DWELLERS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."DWELLERS" 
   (	"DWELLER_ID" NUMBER, 
	"NAME" NVARCHAR2(20), 
	"SURNAME" NVARCHAR2(20), 
	"DOB" DATE, 
	"JOB_ID" NUMBER, 
	"BED_ID" NUMBER, 
	"STATUS" NVARCHAR2(32) DEFAULT 'idle'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT DELETE ON "V_OVERSEER"."DWELLERS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."DWELLERS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."DWELLERS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."DWELLERS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table E_DWLR_STATUS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."E_DWLR_STATUS" 
   (	"DWLR_STATUS" NVARCHAR2(16)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."E_DWLR_STATUS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table E_EXP_STATUS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."E_EXP_STATUS" 
   (	"EXP_STATUS" NVARCHAR2(16)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."E_EXP_STATUS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table E_GEN_STATUS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."E_GEN_STATUS" 
   (	"GEN_STATUS" NVARCHAR2(16)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."E_GEN_STATUS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table E_VER_STATUS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."E_VER_STATUS" 
   (	"VER_STATUS" NVARCHAR2(16)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."E_VER_STATUS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table EXPEDITION_LOGS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."EXPEDITION_LOGS" 
   (	"EXPEDITION_ID" NUMBER, 
	"START_DATE" DATE DEFAULT SYSDATE, 
	"END_DATE" DATE, 
	"EXP_TARGET" NVARCHAR2(32) DEFAULT '>>Not specified<<', 
	"DESCR" NVARCHAR2(256) DEFAULT '>>Empty<<', 
	"EXP_STATUS" NVARCHAR2(16) DEFAULT 'planning'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_DWELLER";
  GRANT SELECT ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_GUARD";
  GRANT DELETE ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."EXPEDITION_LOGS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table EXP_MEMBER_DATA
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."EXP_MEMBER_DATA" 
   (	"EXMEMDAT_ID" NUMBER, 
	"EXP_ID" NUMBER, 
	"DWELLER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."EXP_MEMBER_DATA" TO "R_GUARD";
  GRANT DELETE ON "V_OVERSEER"."EXP_MEMBER_DATA" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."EXP_MEMBER_DATA" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."EXP_MEMBER_DATA" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."EXP_MEMBER_DATA" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table GENERATORS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."GENERATORS" 
   (	"GEN_ID" NUMBER, 
	"STATUS" NVARCHAR2(16), 
	"PERCENTAGE" NUMBER(3,2), 
	"VER_STATUS" NVARCHAR2(16) DEFAULT 'pending'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT DELETE ON "V_OVERSEER"."GENERATORS" TO "R_ENGINEER";
  GRANT INSERT ON "V_OVERSEER"."GENERATORS" TO "R_ENGINEER";
  GRANT SELECT ON "V_OVERSEER"."GENERATORS" TO "R_ENGINEER";
  GRANT UPDATE ON "V_OVERSEER"."GENERATORS" TO "R_ENGINEER";
  GRANT DELETE ON "V_OVERSEER"."GENERATORS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."GENERATORS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."GENERATORS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."GENERATORS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table ITEMS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."ITEMS" 
   (	"ITEM_ID" NUMBER, 
	"ITEM_NAME" NVARCHAR2(16), 
	"ITEM_TYPE" NVARCHAR2(16), 
	"ROOM_ID" NUMBER, 
	"DWELLER_ID" NUMBER, 
	"VER_STATUS" NVARCHAR2(16) DEFAULT 'pending'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."ITEMS" TO "R_DWELLER";
  GRANT INSERT ON "V_OVERSEER"."ITEMS" TO "R_DWELLER";
  GRANT UPDATE ON "V_OVERSEER"."ITEMS" TO "R_GUARD";
  GRANT DELETE ON "V_OVERSEER"."ITEMS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."ITEMS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."ITEMS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."ITEMS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table JOBS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."JOBS" 
   (	"JOB_ID" NUMBER, 
	"JOB_TITLE" NVARCHAR2(32)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT SELECT ON "V_OVERSEER"."JOBS" TO "DWELLER";
  GRANT SELECT ON "V_OVERSEER"."JOBS" TO "R_DWELLER";
  GRANT DELETE ON "V_OVERSEER"."JOBS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."JOBS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."JOBS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."JOBS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table ROOMS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."ROOMS" 
   (	"ROOM_ID" NUMBER, 
	"SECTOR_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT DELETE ON "V_OVERSEER"."ROOMS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."ROOMS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."ROOMS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."ROOMS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table SECTORS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."SECTORS" 
   (	"SECTOR_ID" NUMBER, 
	"SECTOR_NAME" NVARCHAR2(20), 
	"GENERATOR" NUMBER, 
	"WATER_PUMP" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT DELETE ON "V_OVERSEER"."SECTORS" TO "R_ENGINEER";
  GRANT INSERT ON "V_OVERSEER"."SECTORS" TO "R_ENGINEER";
  GRANT SELECT ON "V_OVERSEER"."SECTORS" TO "R_ENGINEER";
  GRANT DELETE ON "V_OVERSEER"."SECTORS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."SECTORS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."SECTORS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."SECTORS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Table WATER_PUMPS
--------------------------------------------------------

  CREATE TABLE "V_OVERSEER"."WATER_PUMPS" 
   (	"PUMP_ID" NUMBER, 
	"STATUS" NVARCHAR2(16), 
	"PERCENTAGE" NUMBER(3,2), 
	"VER_STATUS" NVARCHAR2(16) DEFAULT 'pending'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
  GRANT DELETE ON "V_OVERSEER"."WATER_PUMPS" TO "R_ENGINEER";
  GRANT INSERT ON "V_OVERSEER"."WATER_PUMPS" TO "R_ENGINEER";
  GRANT SELECT ON "V_OVERSEER"."WATER_PUMPS" TO "R_ENGINEER";
  GRANT UPDATE ON "V_OVERSEER"."WATER_PUMPS" TO "R_ENGINEER";
  GRANT DELETE ON "V_OVERSEER"."WATER_PUMPS" TO "R_MANAGER";
  GRANT INSERT ON "V_OVERSEER"."WATER_PUMPS" TO "R_MANAGER";
  GRANT SELECT ON "V_OVERSEER"."WATER_PUMPS" TO "R_MANAGER";
  GRANT UPDATE ON "V_OVERSEER"."WATER_PUMPS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for View APPROVED_COMPLAINTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."APPROVED_COMPLAINTS" ("COMP_ID", "COMP_AUTHOR", "COMP_SUBJ", "DESCR") AS 
  SELECT
    COMP_ID,
    COMP_AUTHOR,
    COMP_SUBJ,
    DESCR
  FROM COMPLAINTS
  WHERE VER_STATUS='approved'
;
  GRANT SELECT ON "V_OVERSEER"."APPROVED_COMPLAINTS" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View ARMORY
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."ARMORY" ("ID", "NAME", "TYPE", "CURRENT PLACEMENT", "CURRENT USER") AS 
  SELECT 
    ITEMS.ITEM_ID AS "ID",
    ITEMS.ITEM_NAME AS "NAME",
    ITEMS.ITEM_TYPE AS "TYPE",
    ITEMS.ROOM_ID AS "CURRENT PLACEMENT",
    ITEMS.DWELLER_ID AS "CURRENT USER"
FROM ITEMS

WHERE (ITEMS.ITEM_TYPE LIKE '%weapon%' OR ITEMS.ITEM_TYPE LIKE '%ammo%') and ITEMS.VER_STATUS = 'approved'
;
  GRANT SELECT ON "V_OVERSEER"."ARMORY" TO "R_GUARD";
--------------------------------------------------------
--  DDL for View AVAILABLE_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."AVAILABLE_ITEMS" ("ID", "ITEM NAME", "TYPE", "CURRENTLY IN ROOM NO.") AS 
  SELECT 
    ITEM_ID AS "ID",
    ITEM_NAME AS "ITEM NAME",
    ITEM_TYPE AS "TYPE",
    ROOM_ID AS "CURRENTLY IN ROOM NO."
FROM 
    ITEMS
WHERE
    ROOM_ID IS NOT NULL AND DWELLER_ID IS NULL
;
  GRANT SELECT ON "V_OVERSEER"."AVAILABLE_ITEMS" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View DAMAGED_GENERATORS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."DAMAGED_GENERATORS" ("GEN_ID", "PERCENTAGE") AS 
  SELECT
  GEN_ID AS "GEN_ID",
  PERCENTAGE AS PERCENTAGE
  FROM GENERATORS
  WHERE STATUS = 'need_service' or STATUS = 'broken'
;
  GRANT SELECT ON "V_OVERSEER"."DAMAGED_GENERATORS" TO "R_ENGINEER";
--------------------------------------------------------
--  DDL for View DAMAGED_PUMPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."DAMAGED_PUMPS" ("PUMP ID", "PERCENTAGE") AS 
  SELECT
  PUMP_ID AS "PUMP ID",
  PERCENTAGE AS PERCENTAGE
  FROM WATER_PUMPS
  WHERE STATUS = 'need_service' or STATUS = 'broken'
;
  GRANT SELECT ON "V_OVERSEER"."DAMAGED_PUMPS" TO "R_ENGINEER";
--------------------------------------------------------
--  DDL for View EMPLOYED
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."EMPLOYED" ("DWELLER ID", "NAME", "SURNAME", "JOB NAME", "JOB ID", "CURRENTLY") AS 
  SELECT D.DWELLER_ID AS "DWELLER ID", D.NAME AS "NAME", D.SURNAME AS "SURNAME", JOBS.JOB_TITLE AS "JOB NAME", D.JOB_ID AS "JOB ID", D.STATUS AS "CURRENTLY"
    
FROM DWELLERS D

INNER JOIN JOBS ON D.JOB_ID = JOBS.JOB_ID

WHERE D.JOB_ID IS NOT NULL
;
  GRANT SELECT ON "V_OVERSEER"."EMPLOYED" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View EXPLORERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."EXPLORERS" ("ID", "NAME", "SURNAME", "JOB NAME", "LINKED EXPEDITION ID", "DAYS SINCE DEPARTURE") AS 
  SELECT 
    DWELLERS.DWELLER_ID AS "ID",
    DWELLERS.NAME AS "NAME",
    DWELLERS.SURNAME AS "SURNAME",
    JOBS.JOB_TITLE AS "JOB NAME",
    EXP_MEMBER_DATA.EXP_ID AS "LINKED EXPEDITION ID",
    TO_DATE(SYSDATE) - TO_DATE(EXPEDITION_LOGS.START_DATE) AS "DAYS SINCE DEPARTURE"
    
FROM 
    DWELLERS
LEFT JOIN JOBS ON DWELLERS.JOB_ID = JOBS.JOB_ID
LEFT JOIN EXP_MEMBER_DATA ON DWELLERS.DWELLER_ID = EXP_MEMBER_DATA.DWELLER_ID
LEFT JOIN EXPEDITION_LOGS ON EXP_MEMBER_DATA.EXP_ID = EXPEDITION_LOGS.EXPEDITION_ID

WHERE
    DWELLERS.STATUS = 'exploring'
ORDER BY
    EXP_MEMBER_DATA.EXP_ID ASC
;
  GRANT SELECT ON "V_OVERSEER"."EXPLORERS" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View FOOD_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."FOOD_ITEMS" ("ID", "NAME", "TYPE", "CURRENT PLACEMENT", "CURRENT USER") AS 
  SELECT 
    ITEMS.ITEM_ID AS "ID",
    ITEMS.ITEM_NAME AS "NAME",
    ITEMS.ITEM_TYPE AS "TYPE",
    ITEMS.ROOM_ID AS "CURRENT PLACEMENT",
    ITEMS.DWELLER_ID AS "CURRENT USER"
FROM ITEMS

WHERE (ITEMS.ITEM_TYPE LIKE '%food%' OR ITEMS.ITEM_TYPE LIKE '%seed%') AND ITEMS.VER_STATUS = 'approved'
;
  GRANT SELECT ON "V_OVERSEER"."FOOD_ITEMS" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View HOSPITAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."HOSPITAL" ("DWELLER_ID", "NAME", "SURNAME", "JOB_TITLE", "STATUS") AS 
  SELECT 
    DWELLER_ID,
    NAME,
    SURNAME,
    JOBS.JOB_TITLE,
    STATUS
FROM DWELLERS
LEFT JOIN JOBS ON JOBS.JOB_ID = DWELLERS.JOB_ID
WHERE STATUS = 'wounded' or STATUS='sick'
;
  GRANT SELECT ON "V_OVERSEER"."HOSPITAL" TO "R_MEDIC";
--------------------------------------------------------
--  DDL for View LIVING_QUARTERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."LIVING_QUARTERS" ("ROOM_ID", "NAME", "SURNAME", "BED_ID") AS 
  SELECT 
    BEDS.ROOM_ID,
    DWELLERS.NAME,
    DWELLERS.SURNAME,
    BEDS.BED_ID
FROM 
    BEDS
LEFT JOIN DWELLERS ON DWELLERS.BED_ID = BEDS.BED_ID
WHERE BEDS.VER_STATUS = 'approved'
ORDER BY BEDS.ROOM_ID ASC
;
  GRANT SELECT ON "V_OVERSEER"."LIVING_QUARTERS" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for View LOGIN_DWELLERS_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."LOGIN_DWELLERS_LIST" ("DWELLER_ID", "NAME", "SURNAME", "JOB_ID") AS 
  SELECT 
    DWELLER_ID,
    NAME,
    SURNAME,
    JOB_ID
FROM 
    DWELLERS
;
  GRANT SELECT ON "V_OVERSEER"."LOGIN_DWELLERS_LIST" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View MEDICAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."MEDICAL" ("ID", "NAME", "TYPE", "CURRENT PLACEMENT", "CURRENT USER") AS 
  SELECT 
    ITEMS.ITEM_ID AS "ID",
    ITEMS.ITEM_NAME AS "NAME",
    ITEMS.ITEM_TYPE AS "TYPE",
    ITEMS.ROOM_ID AS "CURRENT PLACEMENT",
    ITEMS.DWELLER_ID AS "CURRENT USER"
FROM ITEMS

WHERE ITEMS.ITEM_TYPE LIKE '%medical%' and ITEMS.VER_STATUS = 'approved'
;
  GRANT SELECT ON "V_OVERSEER"."MEDICAL" TO "R_MEDIC";
--------------------------------------------------------
--  DDL for View MISSING
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."MISSING" ("ID", "NAME", "SURNAME", "JOB NAME", "LINKED EXPEDITION ID", "DAYS SINCE LAST SEEN") AS 
  SELECT 
    DWELLERS.DWELLER_ID AS "ID",
    DWELLERS.NAME AS "NAME",
    DWELLERS.SURNAME AS "SURNAME",
    JOBS.JOB_TITLE AS "JOB NAME",
    EXP_MEMBER_DATA.EXP_ID AS "LINKED EXPEDITION ID",
    TO_DATE(SYSDATE) - TO_DATE(EXPEDITION_LOGS.START_DATE) AS "DAYS SINCE LAST SEEN"
    
FROM 
    DWELLERS
LEFT JOIN JOBS ON DWELLERS.JOB_ID = JOBS.JOB_ID
LEFT JOIN EXP_MEMBER_DATA ON DWELLERS.DWELLER_ID = EXP_MEMBER_DATA.DWELLER_ID
LEFT JOIN EXPEDITION_LOGS ON EXP_MEMBER_DATA.EXP_ID = EXPEDITION_LOGS.EXPEDITION_ID

WHERE
    DWELLERS.STATUS = 'missing'
ORDER BY
    EXP_MEMBER_DATA.EXP_ID ASC
;
  GRANT SELECT ON "V_OVERSEER"."MISSING" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View NOT_APPROVED_COMPLAINTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."NOT_APPROVED_COMPLAINTS" ("COMP_ID", "COMP_AUTHOR", "COMP_SUBJ", "DESCR") AS 
  SELECT "COMP_ID","COMP_AUTHOR","COMP_SUBJ","DESCR"
  FROM COMPLAINTS
  WHERE NOT VER_STATUS='approved'
;
  GRANT SELECT ON "V_OVERSEER"."NOT_APPROVED_COMPLAINTS" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View ROOMS_PLACEMENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."ROOMS_PLACEMENT" ("ROOM_ID", "SECTOR_NAME", "SECTOR_ID") AS 
  SELECT 
    ROOMS.ROOM_ID,
    SECTORS.SECTOR_NAME,
    SECTORS.SECTOR_ID
FROM 
    ROOMS
LEFT JOIN SECTORS ON SECTORS.SECTOR_ID = ROOMS.SECTOR_ID

ORDER BY SECTORS.SECTOR_ID, ROOMS.ROOM_ID ASC
;
  GRANT SELECT ON "V_OVERSEER"."ROOMS_PLACEMENT" TO "R_DWELLER";
--------------------------------------------------------
--  DDL for View SECTOR_STATUS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."SECTOR_STATUS" ("ID", "SECTOR", "GENERATOR", "GEN %", "GEN STATUS", "GEN VERIFICATION STATUS", "WATER PUMP", "PUMP %", "PUMP STATUS", "PUMP VERIFICATION STATUS") AS 
  SELECT 
    SECTORS.SECTOR_ID AS "ID",
    SECTORS.SECTOR_NAME AS "SECTOR",
    SECTORS.GENERATOR AS "GENERATOR",
    GENERATORS.PERCENTAGE AS "GEN %",
    GENERATORS.STATUS AS "GEN STATUS",
    GENERATORS.VER_STATUS AS "GEN VERIFICATION STATUS",
    SECTORS.WATER_PUMP AS "WATER PUMP",
    WATER_PUMPS.PERCENTAGE AS "PUMP %",
    WATER_PUMPS.STATUS AS "PUMP STATUS",
    WATER_PUMPS.VER_STATUS AS "PUMP VERIFICATION STATUS"
FROM 
    SECTORS
LEFT JOIN GENERATORS ON GENERATORS.GEN_ID = SECTORS.GENERATOR
LEFT JOIN WATER_PUMPS ON WATER_PUMPS.PUMP_ID = SECTORS.WATER_PUMP
;
  GRANT SELECT ON "V_OVERSEER"."SECTOR_STATUS" TO "R_ENGINEER";
--------------------------------------------------------
--  DDL for View TOOLS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_OVERSEER"."TOOLS" ("ID", "NAME", "TYPE", "CURRENT PLACEMENT", "CURRENT USER") AS 
  SELECT 
    ITEMS.ITEM_ID AS "ID",
    ITEMS.ITEM_NAME AS "NAME",
    ITEMS.ITEM_TYPE AS "TYPE",
    ITEMS.ROOM_ID AS "CURRENT PLACEMENT",
    ITEMS.DWELLER_ID AS "CURRENT USER"
FROM ITEMS

WHERE ITEMS.ITEM_TYPE LIKE '%tool%' and ITEMS.VER_STATUS = 'approved'
;
  GRANT SELECT ON "V_OVERSEER"."TOOLS" TO "R_ENGINEER";
--------------------------------------------------------
--  DDL for Index DWELLERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."DWELLERS_PK" ON "V_OVERSEER"."DWELLERS" ("DWELLER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index E_EXP_STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."E_EXP_STATUS_PK" ON "V_OVERSEER"."E_EXP_STATUS" ("EXP_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index EXPEDITION_LOGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."EXPEDITION_LOGS_PK" ON "V_OVERSEER"."EXPEDITION_LOGS" ("EXPEDITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index WATER_PUMPS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."WATER_PUMPS_PK" ON "V_OVERSEER"."WATER_PUMPS" ("PUMP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index GENERATORS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."GENERATORS_PK" ON "V_OVERSEER"."GENERATORS" ("GEN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index TABLE1_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."TABLE1_PK" ON "V_OVERSEER"."JOBS" ("JOB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index COMPLAINTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."COMPLAINTS_PK" ON "V_OVERSEER"."COMPLAINTS" ("COMP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index IT_TYPE_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."IT_TYPE_IDX" ON "V_OVERSEER"."ITEMS" ("ITEM_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index SECTORS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."SECTORS_PK" ON "V_OVERSEER"."SECTORS" ("SECTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index E_GEN_STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."E_GEN_STATUS_PK" ON "V_OVERSEER"."E_GEN_STATUS" ("GEN_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index DWLR_STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."DWLR_STATUS_PK" ON "V_OVERSEER"."E_DWLR_STATUS" ("DWLR_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index WP_VSTATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."WP_VSTATUS_IDX" ON "V_OVERSEER"."WATER_PUMPS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index E_VER_STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."E_VER_STATUS_PK" ON "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index DR_STATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."DR_STATUS_IDX" ON "V_OVERSEER"."GENERATORS" ("STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index IT_VSTATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."IT_VSTATUS_IDX" ON "V_OVERSEER"."ITEMS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index WP_STATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."WP_STATUS_IDX" ON "V_OVERSEER"."WATER_PUMPS" ("STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index EXP_STATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."EXP_STATUS_IDX" ON "V_OVERSEER"."EXPEDITION_LOGS" ("EXP_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index ITEMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."ITEMS_PK" ON "V_OVERSEER"."ITEMS" ("ITEM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index GR_VSTATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."GR_VSTATUS_IDX" ON "V_OVERSEER"."GENERATORS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index BEDS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."BEDS_PK" ON "V_OVERSEER"."BEDS" ("BED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index ROOMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."ROOMS_PK" ON "V_OVERSEER"."ROOMS" ("ROOM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index CMP_VSTATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."CMP_VSTATUS_IDX" ON "V_OVERSEER"."COMPLAINTS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index BED_VSTATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."BED_VSTATUS_IDX" ON "V_OVERSEER"."BEDS" ("VER_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index EXP_MEMBER_DATA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "V_OVERSEER"."EXP_MEMBER_DATA_PK" ON "V_OVERSEER"."EXP_MEMBER_DATA" ("EXMEMDAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Index DLR_STATUS_IDX
--------------------------------------------------------

  CREATE INDEX "V_OVERSEER"."DLR_STATUS_IDX" ON "V_OVERSEER"."DWELLERS" ("STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VAULT" ;
--------------------------------------------------------
--  DDL for Trigger BED_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."BED_UPDATE" 
   before insert OR UPDATE on "V_OVERSEER"."BEDS"
   for each row 
begin  

    IF NOT UPDATING ('VER_STATUS') THEN
        :NEW.ver_status := 'pending';
    END IF;

   if inserting then 
      if :NEW.BED_ID is null then 
         select PK_GEN_BEDS.nextval into :NEW.BED_ID from dual; 
      end if; 
   end if; 
end;


/
ALTER TRIGGER "V_OVERSEER"."BED_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COMP_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."COMP_UPDATE" 
BEFORE INSERT OR UPDATE ON "V_OVERSEER"."COMPLAINTS" 
FOR EACH ROW
BEGIN
  IF NOT UPDATING ('VER_STATUS') THEN
        :NEW.ver_status := 'pending';
    END IF;

    IF INSERTING THEN
        IF :NEW.COMP_ID IS NULL THEN
            SELECT PK_GEN_COMP.NEXTVAL INTO :NEW.COMP_ID FROM DUAL;
        END IF;
    END IF;
END;


/
ALTER TRIGGER "V_OVERSEER"."COMP_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DWLR_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."DWLR_UPDATE" 
BEFORE INSERT OR UPDATE OR DELETE ON "V_OVERSEER"."DWELLERS"
FOR EACH ROW
BEGIN

   IF UPDATING ('BED_ID') OR INSERTING THEN
        IF(BED_STATUS(:NEW.BED_ID) != 'approved') THEN
            RAISE_APPLICATION_ERROR(-20002, 'Bed status not confirmed yet - cannot assign');
        END IF;
   END IF;

   IF DELETING THEN
        DELETE FROM EXP_MEMBER_DATA WHERE EXP_MEMBER_DATA.DWELLER_ID = :OLD.DWELLER_ID;
        UPDATE COMPLAINTS SET COMP_AUTHOR = NULL WHERE COMP_AUTHOR = :OLD.DWELLER_ID;
   END IF;


    IF inserting THEN 
      IF :NEW.DWELLER_ID IS NULL THEN 
         select PK_GEN_DWLR.NEXTVAL INTO :NEW.DWELLER_ID FROM dual; 
      END IF; 
   END IF; 
END;


/
ALTER TRIGGER "V_OVERSEER"."DWLR_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMD_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."EMD_UPDATE" 
BEFORE INSERT OR UPDATE OR DELETE ON "V_OVERSEER"."EXP_MEMBER_DATA"
FOR EACH ROW
BEGIN
     IF (INSERTING OR UPDATING) THEN
        IF EXP_STATUS(:NEW.EXP_ID) = 'in_progress' THEN
            UPDATE DWELLERS SET STATUS = 'exploring' WHERE DWELLER_ID = :NEW.DWELLER_ID;
        ELSIF EXP_STATUS(:NEW.EXP_ID) = 'failure' THEN
            UPDATE DWELLERS SET STATUS = 'missing' WHERE DWELLER_ID = :NEW.DWELLER_ID;
        END IF;
     END IF;

     if inserting then 
      if :NEW.EXMEMDAT_ID is null then 
         select PK_GEN_EMD.nextval into :NEW.EXMEMDAT_ID from dual; 
      end if; 
   end if; 
END;

/
ALTER TRIGGER "V_OVERSEER"."EMD_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EXP_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."EXP_UPDATE" 
BEFORE INSERT OR UPDATE OR DELETE ON "V_OVERSEER"."EXPEDITION_LOGS"
FOR EACH ROW
BEGIN
    IF UPDATING ('EXP_STATUS') THEN
        EXPLORERS_UPDATE;
    END IF;

   IF inserting THEN 
      IF :NEW.EXPEDITION_ID IS NULL THEN 
         select PK_GEN_EXP.NEXTVAL INTO :NEW.EXPEDITION_ID FROM dual; 
      END IF; 
   END IF; 

   IF DELETING THEN
        DELETE FROM EXP_MEMBER_DATA WHERE EXP_MEMBER_DATA.EXP_ID = :OLD.EXPEDITION_ID;
   END IF;
END;

/
ALTER TRIGGER "V_OVERSEER"."EXP_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger GR_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."GR_UPDATE" 
BEFORE INSERT OR UPDATE OR DELETE ON "V_OVERSEER"."GENERATORS" 
   for each row 
begin  
    IF NOT UPDATING ('VER_STATUS') AND NOT UPDATING ('PERCENTAGE') AND NOT DELETING THEN
        :NEW.ver_status := 'pending';
    END IF;

    IF :NEW.STATUS = 'offline' OR :NEW.STATUS = 'broken' THEN
        :NEW.PERCENTAGE := 0;
    END IF;

    IF :NEW.STATUS = 'need_service' AND :NEW.PERCENTAGE > 0.5 THEN
        :NEW.PERCENTAGE := 0.49;
    END IF;

   if inserting then 
      if :NEW."GEN_ID" is null then 
         select PK_GEN_GTOR.nextval into :NEW."GEN_ID" from dual; 
      end if; 
   end if; 

   IF DELETING THEN
        UPDATE SECTORS SET GENERATOR = NULL WHERE GENERATOR = :OLD.GEN_ID;
   END IF;
end;


/
ALTER TRIGGER "V_OVERSEER"."GR_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ITM_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."ITM_UPDATE" 
BEFORE INSERT OR UPDATE ON "V_OVERSEER"."ITEMS" 
FOR EACH ROW
BEGIN
    IF NOT UPDATING ('VER_STATUS') THEN
        :NEW.ver_status := 'pending';
    END IF;

   IF inserting THEN 
      IF :NEW.ITEM_ID IS NULL THEN 
         select PK_GEN_ITEMS.NEXTVAL INTO :NEW.ITEM_ID FROM dual; 
      END IF; 
   END IF; 
END;


/
ALTER TRIGGER "V_OVERSEER"."ITM_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger JBS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."JBS_UPDATE" 
BEFORE DELETE OR INSERT OR UPDATE ON "V_OVERSEER"."JOBS" 
FOR EACH ROW
BEGIN
  IF DELETING THEN
    UPDATE DWELLERS
    SET JOB_ID = NULL
    WHERE JOB_ID = :OLD.JOB_ID;
  END IF;

  if inserting then 
      if :NEW.JOB_ID is null then 
         select PK_GEN_JOB.nextval into :NEW.JOB_ID from dual; 
      end if; 
   end if; 
END;


/
ALTER TRIGGER "V_OVERSEER"."JBS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROOM_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."ROOM_UPDATE" 
BEFORE INSERT OR UPDATE ON "V_OVERSEER"."ROOMS" 
FOR EACH ROW
BEGIN
    if inserting then 
      if :NEW.ROOM_ID is null then 
         select PK_GEN_ROOMS.nextval into :NEW.ROOM_ID from dual; 
      end if; 
   end if; 
END;


/
ALTER TRIGGER "V_OVERSEER"."ROOM_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger STOR_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."STOR_UPDATE" 
BEFORE INSERT OR UPDATE ON "V_OVERSEER"."SECTORS" 
FOR EACH ROW
BEGIN
    if inserting then 
        if :NEW.SECTOR_ID is null then 
            select PK_GEN_STOR.nextval into :NEW.SECTOR_ID from dual; 
        end if; 
    end if; 
END;


/
ALTER TRIGGER "V_OVERSEER"."STOR_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger WP_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "V_OVERSEER"."WP_UPDATE" before insert OR UPDATE OR DELETE on "V_OVERSEER"."WATER_PUMPS"
   for each row 
begin  
    IF NOT UPDATING ('VER_STATUS') AND NOT UPDATING ('PERCENTAGE') AND NOT DELETING THEN
        :NEW.ver_status := 'pending';
    END IF;

    IF :NEW.STATUS = 'offline' OR :NEW.STATUS = 'broken' THEN
        :NEW.PERCENTAGE := 0;
    END IF;

    IF :NEW.STATUS = 'need_service' AND :NEW.PERCENTAGE > 0.5 THEN
        :NEW.PERCENTAGE := 0.49;
    END IF;

   if inserting then 
      if :NEW."PUMP_ID" is null then 
         select PK_GEN_PUMP.nextval into :NEW."PUMP_ID" from dual; 
      end if; 
   end if; 

   IF DELETING THEN
        UPDATE SECTORS SET WATER_PUMP = NULL WHERE WATER_PUMP = :OLD.PUMP_ID;
   END IF;
end;


/
ALTER TRIGGER "V_OVERSEER"."WP_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Procedure EXPLORERS_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "V_OVERSEER"."EXPLORERS_UPDATE" AS 
BEGIN

    UPDATE DWELLERS 
    SET 
        STATUS = 'exploring' 
    WHERE DWELLER_ID IN 
        (SELECT DWELLER_ID 
        FROM EXP_MEMBER_DATA 
        WHERE EXP_ID IN
            (SELECT EXPEDITION_ID
            FROM EXPEDITION_LOGS
            WHERE EXP_STATUS = 'in_progress'));

    UPDATE DWELLERS         
    SET 
        STATUS = 'missing' 
    WHERE DWELLER_ID IN 
        (SELECT DWELLER_ID 
        FROM EXP_MEMBER_DATA 
        WHERE EXP_ID IN
            (SELECT EXPEDITION_ID
            FROM EXPEDITION_LOGS
            WHERE EXP_STATUS = 'failure'));

END EXPLORERS_UPDATE;

/
--------------------------------------------------------
--  DDL for Procedure RESET_SEQ
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "V_OVERSEER"."RESET_SEQ" ( p_seq_name in varchar2 )
is
    l_val number;
begin
    execute immediate
    'select ' || p_seq_name || '.nextval from dual' INTO l_val;

    execute immediate
    'alter sequence ' || p_seq_name || ' increment by -' || l_val || 
                                                          ' minvalue 0';

    execute immediate
    'select ' || p_seq_name || '.nextval from dual' INTO l_val;

    execute immediate
    'alter sequence ' || p_seq_name || ' increment by 1 minvalue 0';
end;



/

  GRANT EXECUTE ON "V_OVERSEER"."RESET_SEQ" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Procedure VERIFICATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "V_OVERSEER"."VERIFICATION" 
(
  TAB_NAME IN VARCHAR2
, ID IN NUMBER 
, DECISION IN VARCHAR2 
) IS
    PK_COL VARCHAR2(64);
    l_sql VARCHAR2 (1000);
    l_rc NUMBER;
    MY_PROC VARCHAR2(256);
BEGIN


SELECT column_name INTO PK_COL FROM all_cons_columns WHERE constraint_name = (
  SELECT constraint_name FROM all_constraints 
  WHERE UPPER(table_name) = UPPER(TAB_NAME) AND CONSTRAINT_TYPE = 'P'
);


l_sql := 'UPDATE ' || TAB_NAME || ' SET VER_STATUS = ''' || LOWER(DECISION) || ''' WHERE ' || TAB_NAME || '.' || PK_COL || ' = ' || ID;

IF ID = -2137 THEN
    l_sql := 'UPDATE ' || TAB_NAME || ' SET VER_STATUS = ''' || LOWER(DECISION) || ''' WHERE VER_STATUS = ''pending''';
END IF;


EXECUTE IMMEDIATE l_sql;

dbms_output.put_line(l_rc);

IF  (SQL%ROWCOUNT = 0) THEN
    RAISE_APPLICATION_ERROR(-20003, 'Not a viable ID');
    END IF;
END VERIFICATION;


/

  GRANT EXECUTE ON "V_OVERSEER"."VERIFICATION" TO "R_MANAGER";
--------------------------------------------------------
--  DDL for Function BED_STATUS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "V_OVERSEER"."BED_STATUS" 
(
  P_BED_ID IN NUMBER
) RETURN VARCHAR2
IS
    L_BED_STATUS VARCHAR2(16);
BEGIN
  SELECT VER_STATUS
  INTO L_BED_STATUS
  FROM BEDS
  WHERE BEDS.BED_ID = P_BED_ID;

  RETURN L_BED_STATUS;
END BED_STATUS;



/
--------------------------------------------------------
--  DDL for Function EXP_STATUS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "V_OVERSEER"."EXP_STATUS" 
(
  EXP_ID IN NUMBER
) RETURN VARCHAR2 
IS
    L_EXP_STATUS VARCHAR2(16);
BEGIN
  SELECT EXP_STATUS
  INTO L_EXP_STATUS
  FROM EXPEDITION_LOGS
  WHERE EXPEDITION_ID = EXP_ID;

  RETURN L_EXP_STATUS;
END EXP_STATUS;

/
--------------------------------------------------------
--  Constraints for Table WATER_PUMPS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" MODIFY ("PUMP_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" ADD CONSTRAINT "WATER_PUMPS_PK" PRIMARY KEY ("PUMP_ID")
  USING INDEX "V_OVERSEER"."WATER_PUMPS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" ADD CONSTRAINT "WATER_PUMPS_PERC" CHECK (PERCENTAGE BETWEEN 0 AND 1) ENABLE;
  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMPLAINTS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."COMPLAINTS" MODIFY ("COMP_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."COMPLAINTS" ADD CONSTRAINT "COMPLAINTS_PK" PRIMARY KEY ("COMP_ID")
  USING INDEX "V_OVERSEER"."COMPLAINTS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."COMPLAINTS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EXP_MEMBER_DATA
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."EXP_MEMBER_DATA" MODIFY ("EXMEMDAT_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."EXP_MEMBER_DATA" ADD CONSTRAINT "EXP_MEMBER_DATA_PK" PRIMARY KEY ("EXMEMDAT_ID")
  USING INDEX "V_OVERSEER"."EXP_MEMBER_DATA_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table JOBS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."JOBS" MODIFY ("JOB_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."JOBS" MODIFY ("JOB_TITLE" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."JOBS" ADD CONSTRAINT "TABLE1_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX "V_OVERSEER"."TABLE1_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EXPEDITION_LOGS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."EXPEDITION_LOGS" MODIFY ("EXPEDITION_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."EXPEDITION_LOGS" ADD CONSTRAINT "EXPEDITION_LOGS_PK" PRIMARY KEY ("EXPEDITION_ID")
  USING INDEX "V_OVERSEER"."EXPEDITION_LOGS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."EXPEDITION_LOGS" MODIFY ("EXP_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table E_VER_STATUS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."E_VER_STATUS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."E_VER_STATUS" ADD CONSTRAINT "E_VER_STATUS_PK" PRIMARY KEY ("VER_STATUS")
  USING INDEX "V_OVERSEER"."E_VER_STATUS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ROOMS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."ROOMS" MODIFY ("ROOM_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."ROOMS" MODIFY ("SECTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."ROOMS" ADD CONSTRAINT "ROOMS_PK" PRIMARY KEY ("ROOM_ID")
  USING INDEX "V_OVERSEER"."ROOMS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SECTORS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."SECTORS" MODIFY ("SECTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."SECTORS" ADD CONSTRAINT "SECTORS_PK" PRIMARY KEY ("SECTOR_ID")
  USING INDEX "V_OVERSEER"."SECTORS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GENERATORS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."GENERATORS" MODIFY ("GEN_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."GENERATORS" ADD CONSTRAINT "GENERATORS_PK" PRIMARY KEY ("GEN_ID")
  USING INDEX "V_OVERSEER"."GENERATORS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."GENERATORS" ADD CONSTRAINT "GTOR_PERC_CHK" CHECK (PERCENTAGE BETWEEN 0 AND 1) ENABLE;
  ALTER TABLE "V_OVERSEER"."GENERATORS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."ITEMS" MODIFY ("ITEM_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."ITEMS" ADD CONSTRAINT "ITEMS_PK" PRIMARY KEY ("ITEM_ID")
  USING INDEX "V_OVERSEER"."ITEMS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."ITEMS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BEDS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."BEDS" MODIFY ("BED_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."BEDS" ADD CONSTRAINT "BEDS_PK" PRIMARY KEY ("BED_ID")
  USING INDEX "V_OVERSEER"."BEDS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."BEDS" MODIFY ("VER_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DWELLERS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."DWELLERS" MODIFY ("DWELLER_ID" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."DWELLERS" ADD CONSTRAINT "DWELLERS_PK" PRIMARY KEY ("DWELLER_ID")
  USING INDEX "V_OVERSEER"."DWELLERS_PK"  ENABLE;
  ALTER TABLE "V_OVERSEER"."DWELLERS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table E_GEN_STATUS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."E_GEN_STATUS" MODIFY ("GEN_STATUS" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."E_GEN_STATUS" ADD CONSTRAINT "E_GEN_STATUS_PK" PRIMARY KEY ("GEN_STATUS")
  USING INDEX "V_OVERSEER"."E_GEN_STATUS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table E_DWLR_STATUS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."E_DWLR_STATUS" MODIFY ("DWLR_STATUS" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."E_DWLR_STATUS" ADD CONSTRAINT "DWLR_STATUS_PK" PRIMARY KEY ("DWLR_STATUS")
  USING INDEX "V_OVERSEER"."DWLR_STATUS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table E_EXP_STATUS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."E_EXP_STATUS" MODIFY ("EXP_STATUS" NOT NULL ENABLE);
  ALTER TABLE "V_OVERSEER"."E_EXP_STATUS" ADD CONSTRAINT "E_EXP_STATUS_PK" PRIMARY KEY ("EXP_STATUS")
  USING INDEX "V_OVERSEER"."E_EXP_STATUS_PK"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BEDS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."BEDS" ADD CONSTRAINT "BEDS_FK_VER_ST" FOREIGN KEY ("VER_STATUS")
	  REFERENCES "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") ENABLE;
  ALTER TABLE "V_OVERSEER"."BEDS" ADD CONSTRAINT "BEDS_FK_ROOM" FOREIGN KEY ("ROOM_ID")
	  REFERENCES "V_OVERSEER"."ROOMS" ("ROOM_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMPLAINTS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."COMPLAINTS" ADD CONSTRAINT "COMPLAINTS_FK_STAT" FOREIGN KEY ("VER_STATUS")
	  REFERENCES "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") ENABLE;
  ALTER TABLE "V_OVERSEER"."COMPLAINTS" ADD CONSTRAINT "COMPLAINTS_FK_DWLR" FOREIGN KEY ("COMP_AUTHOR")
	  REFERENCES "V_OVERSEER"."DWELLERS" ("DWELLER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DWELLERS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."DWELLERS" ADD CONSTRAINT "FOREIGN_KEY" FOREIGN KEY ("JOB_ID")
	  REFERENCES "V_OVERSEER"."JOBS" ("JOB_ID") ENABLE;
  ALTER TABLE "V_OVERSEER"."DWELLERS" ADD CONSTRAINT "STATUS" FOREIGN KEY ("STATUS")
	  REFERENCES "V_OVERSEER"."E_DWLR_STATUS" ("DWLR_STATUS") ENABLE;
  ALTER TABLE "V_OVERSEER"."DWELLERS" ADD CONSTRAINT "DWELLERS_FK_BED" FOREIGN KEY ("BED_ID")
	  REFERENCES "V_OVERSEER"."BEDS" ("BED_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXPEDITION_LOGS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."EXPEDITION_LOGS" ADD CONSTRAINT "EXP_LOGS_FK_STAT" FOREIGN KEY ("EXP_STATUS")
	  REFERENCES "V_OVERSEER"."E_EXP_STATUS" ("EXP_STATUS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXP_MEMBER_DATA
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."EXP_MEMBER_DATA" ADD CONSTRAINT "EMD_FK_EXPID" FOREIGN KEY ("EXP_ID")
	  REFERENCES "V_OVERSEER"."EXPEDITION_LOGS" ("EXPEDITION_ID") ENABLE;
  ALTER TABLE "V_OVERSEER"."EXP_MEMBER_DATA" ADD CONSTRAINT "EMD_FK_DWID" FOREIGN KEY ("DWELLER_ID")
	  REFERENCES "V_OVERSEER"."DWELLERS" ("DWELLER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GENERATORS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."GENERATORS" ADD CONSTRAINT "GENERATORS_FK_GEN_ST" FOREIGN KEY ("STATUS")
	  REFERENCES "V_OVERSEER"."E_GEN_STATUS" ("GEN_STATUS") ENABLE;
  ALTER TABLE "V_OVERSEER"."GENERATORS" ADD CONSTRAINT "GENERATORS_FK_VER_ST" FOREIGN KEY ("VER_STATUS")
	  REFERENCES "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."ITEMS" ADD CONSTRAINT "ITEMS_FK_ROOM" FOREIGN KEY ("ROOM_ID")
	  REFERENCES "V_OVERSEER"."ROOMS" ("ROOM_ID") ENABLE;
  ALTER TABLE "V_OVERSEER"."ITEMS" ADD CONSTRAINT "ITEMS_FK_DWLR" FOREIGN KEY ("DWELLER_ID")
	  REFERENCES "V_OVERSEER"."DWELLERS" ("DWELLER_ID") ENABLE;
  ALTER TABLE "V_OVERSEER"."ITEMS" ADD CONSTRAINT "ITEMS_FK_VER_ST" FOREIGN KEY ("VER_STATUS")
	  REFERENCES "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROOMS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."ROOMS" ADD CONSTRAINT "ROOMS_FK_SEC" FOREIGN KEY ("SECTOR_ID")
	  REFERENCES "V_OVERSEER"."SECTORS" ("SECTOR_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECTORS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."SECTORS" ADD CONSTRAINT "SECTORS_FK_GEN" FOREIGN KEY ("GENERATOR")
	  REFERENCES "V_OVERSEER"."GENERATORS" ("GEN_ID") ENABLE;
  ALTER TABLE "V_OVERSEER"."SECTORS" ADD CONSTRAINT "SECTORS_FK_PMP" FOREIGN KEY ("WATER_PUMP")
	  REFERENCES "V_OVERSEER"."WATER_PUMPS" ("PUMP_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WATER_PUMPS
--------------------------------------------------------

  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" ADD CONSTRAINT "WATER_PUMPS_FK_GEN_ST" FOREIGN KEY ("STATUS")
	  REFERENCES "V_OVERSEER"."E_GEN_STATUS" ("GEN_STATUS") ENABLE;
  ALTER TABLE "V_OVERSEER"."WATER_PUMPS" ADD CONSTRAINT "WATER_PUMPS_FK_VER_ST" FOREIGN KEY ("VER_STATUS")
	  REFERENCES "V_OVERSEER"."E_VER_STATUS" ("VER_STATUS") ENABLE;



-- CREATE SYNONYMS FOR TABLES FOR EASE OF USE BY OTHER USERS

CREATE PUBLIC SYNONYM BEDS FOR V_OVERSEER.BEDS;

CREATE PUBLIC SYNONYM COMPLAINTS FOR V_OVERSEER.COMPLAINTS;

CREATE PUBLIC SYNONYM DWELLERS FOR V_OVERSEER.DWELLERS;

CREATE PUBLIC SYNONYM E_DWLR_STATUS FOR V_OVERSEER.E_DWLR_STATUS;

CREATE PUBLIC SYNONYM E_EXP_STATUS FOR V_OVERSEER.E_EXP_STATUS;

CREATE PUBLIC SYNONYM E_GEN_STATUS FOR V_OVERSEER.E_GEN_STATUS;

CREATE PUBLIC SYNONYM E_VER_STATUS FOR V_OVERSEER.E_VER_STATUS;

CREATE PUBLIC SYNONYM EXP_MEMBER_DATA FOR V_OVERSEER.EXP_MEMBER_DATA;

CREATE PUBLIC SYNONYM EXPEDITION_LOGS FOR V_OVERSEER.EXPEDITION_LOGS;

CREATE PUBLIC SYNONYM GENERATORS FOR V_OVERSEER.GENERATORS;

CREATE PUBLIC SYNONYM ITEMS FOR V_OVERSEER.ITEMS;

CREATE PUBLIC SYNONYM ROOMS FOR V_OVERSEER.ROOMS;

CREATE PUBLIC SYNONYM SECTORS FOR V_OVERSEER.SECTORS;

CREATE PUBLIC SYNONYM WATER_PUMPS FOR V_OVERSEER.WATER_PUMPS;

CREATE PUBLIC SYNONYM APPROVED_COMPLAINTS FOR V_OVERSEER.APPROVED_COMPLAINTS;

CREATE PUBLIC SYNONYM ARMORY FOR V_OVERSEER.ARMORY;

CREATE PUBLIC SYNONYM AVAILABLE_ITEMS FOR V_OVERSEER.AVAILABLE_ITEMS;

CREATE PUBLIC SYNONYM DAMAGED_GENERATORS FOR V_OVERSEER.DAMAGED_GENERATORS;

CREATE PUBLIC SYNONYM DAMAGED_PUMPS FOR V_OVERSEER.DAMAGED_PUMPS;

CREATE PUBLIC SYNONYM EMPLOYED FOR V_OVERSEER.EMPLOYED;

CREATE PUBLIC SYNONYM EXPLORERS FOR V_OVERSEER.EXPLORERS;

CREATE PUBLIC SYNONYM FOOD_ITEMS FOR V_OVERSEER.FOOD_ITEMS;

CREATE PUBLIC SYNONYM HOSPITAL FOR V_OVERSEER.HOSPITAL;

CREATE PUBLIC SYNONYM LIVING_QUARTERS FOR V_OVERSEER.LIVING_QUARTERS;

CREATE PUBLIC SYNONYM MEDICAL FOR V_OVERSEER.MEDICAL;

CREATE PUBLIC SYNONYM NOT_APPROVED_COMPLAINTS FOR V_OVERSEER.NOT_APPROVED_COMPLAINTS;

CREATE PUBLIC SYNONYM ROOMS_PLACEMENT FOR V_OVERSEER.ROOMS_PLACEMENT;

CREATE PUBLIC SYNONYM SECTOR_STATUS FOR V_OVERSEER.SECTOR_STATUS;

CREATE PUBLIC SYNONYM TOOLS FOR V_OVERSEER.TOOLS;

CREATE PUBLIC SYNONYM MISSING FOR V_OVERSEER.MISSING;

CREATE PUBLIC SYNONYM BEDS FOR V_OVERSEER.BEDS;

CREATE PUBLIC SYNONYM JOBS FOR V_OVERSEER.JOBS;

CREATE PUBLIC SYNONYM LOGIN_DWELLERS_LIST FOR V_OVERSEER.LOGIN_DWELLERS_LIST;

CREATE PUBLIC SYNONYM RESET_SEQ FOR V_OVERSEER.RESET_SEQ;

CREATE PUBLIC SYNONYM VERIFICATION FOR V_OVERSEER.VERIFICATION;